<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.tech.petfriends.product.dao.ProductDao">
	<!-- product list 쿼리문 -->
	<select id="productListView"
		resultType="com.tech.petfriends.product.dto.ProductListViewDto">
		SELECT
			PRO.PRO_CODE,
			PRO.PRO_NAME,
			PROIMG.MAIN_IMG1,
			MIN(PROOPT.PROOPT_FINALPRICE) PROOPT_FINALPRICE,
			MIN(PROOPT.PROOPT_PRICE) PROOPT_PRICE,
			PRO.PRO_DISCOUNT,
			PRO.PRO_ONOFF,
			NVL(COUNT(PROREV.PRO_CODE), 0) AS TOTAL_REVIEWS, 
		    COALESCE(ROUND(AVG(PROREV.REVIEW_RATING), 1), 0.0) AS AVERAGE_RATING  
			
		FROM
			PRODUCT PRO
		INNER JOIN
			PRODUCT_IMAGE PROIMG ON PRO.PRO_CODE = PROIMG.PRO_CODE
		INNER JOIN
			PRODUCT_OPTION PROOPT ON PRO.PRO_CODE = PROOPT.PRO_CODE
		LEFT JOIN
			PRODUCT_REVIEW PROREV ON PRO.PRO_CODE = PROREV.PRO_CODE
		WHERE
			PRO.PRO_PETS = #{petType}
		AND
			PRO.PRO_TYPE = #{proType}	
		AND
			PRO.PRO_ONOFF IN ('판매', '품절')	
		<if test="dfoodType != null or dsnackType != null or dgoodsType != null
		or cfoodType != null or csnackType != null or cgoodsType != null">
		AND 
		PRO.PRO_CATEGORY IN (
			<if test="dfoodType != null">#{dfoodType}</if>
    	    <if test="dsnackType != null">#{dsnackType}</if>
        	<if test="dgoodsType != null">#{dgoodsType}</if>
        	<if test="cfoodType != null">#{cfoodType}</if>
        	<if test="csnackType != null">#{csnackType}</if>
        	<if test="cgoodsType != null">#{cgoodsType}</if>
  		)
		</if>
		<if test="dfs1option != null and dfs1option.size() > 0 or dg1option != null and dg1option.size() > 0 or cfs1option != null and cfs1option.size() > 0 or cg1option != null and cg1option.size() > 0 or cg2option != null and cg2option.size() > 0">
		AND
		PRO.PRO_FILTER1 IN (
			<foreach item="option" collection="dfs1option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="dg1option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="cfs1option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="cg1option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="cg2option" open="" separator="," close="">
				#{option}
			</foreach>
		)
		</if>
		<if test="dfs2option != null and dfs2option.size() > 0 or dg2option != null and dg2option.size() > 0 or cfs2option != null and cfs2option.size() > 0 ">
		AND
		PRO.PRO_FILTER2 IN (
			<foreach item="option" collection="dfs2option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="dg2option" open="" separator="," close="">
				#{option}
			</foreach>
			<foreach item="option" collection="cfs2option" open="" separator="," close="">
				#{option}
			</foreach>
		)
		</if>
		<if test="priceOption != null and priceOption.size() > 0">
		AND
			  <foreach item="option" collection="priceOption" separator=" OR " open="(" close=")" >
			  	${option}
			  </foreach>
		</if>
		
		GROUP BY
			PRO.PRO_CODE, PRO.PRO_NAME, PROIMG.MAIN_IMG1, PRO.PRO_DISCOUNT, 
			PRO.PRO_DATE, PRO.PRO_ONOFF
		ORDER BY
			${rankOption}
	</select>
	
	<!-- 제품 상세페이지 쿼리문 -->
	<select id="productDetail"
		resultType="com.tech.petfriends.product.dto.ProductDetailDto">
		
		SELECT 
			PRO.PRO_CODE, PRO.PRO_NAME, PRO.PRO_PETS, PRO.PRO_TYPE, PRO.PRO_CATEGORY, PRO.PRO_FILTER1, PRO.PRO_FILTER2, PRO.PRO_DISCOUNT, PRO.PRO_ONOFF,
			PROIMG.MAIN_IMG1, PROIMG.MAIN_IMG2, PROIMG.MAIN_IMG3, PROIMG.MAIN_IMG4, PROIMG.MAIN_IMG5, PROIMG.CHECK_IMG,
			PROIMG.DES_IMG1, PROIMG.DES_IMG2, PROIMG.DES_IMG3, PROIMG.DES_IMG4, PROIMG.DES_IMG5,
			PROIMG.DES_IMG6, PROIMG.DES_IMG7, PROIMG.DES_IMG8, PROIMG.DES_IMG9, PROIMG.DES_IMG10
		FROM 
    		PRODUCT PRO
		INNER JOIN
    		PRODUCT_IMAGE PROIMG ON PRO.PRO_CODE = PROIMG.PRO_CODE
		WHERE 
    		PRO.PRO_CODE = #{pro_code}
		
	</select>
	
	<!-- 제품별 별점평균, 리뷰수 쿼리문 -->
	<select id="productReviewRank"
		resultType="com.tech.petfriends.product.dto.ProductDetailReviewRankDto">
		SELECT
			COUNT(*) AS TOTAL_REVIEWS,                                    
 		    TO_CHAR(ROUND(AVG(REVIEW_RATING), 1), '9.0') AS AVERAGE_RATING,
 		    SUM(CASE WHEN REVIEW_RATING = 1 THEN 1 ELSE 0 END) AS RATING_1,
 		    SUM(CASE WHEN REVIEW_RATING = 2 THEN 1 ELSE 0 END) AS RATING_2,
 		    SUM(CASE WHEN REVIEW_RATING = 3 THEN 1 ELSE 0 END) AS RATING_3,
    		SUM(CASE WHEN REVIEW_RATING = 4 THEN 1 ELSE 0 END) AS RATING_4,
    		SUM(CASE WHEN REVIEW_RATING = 5 THEN 1 ELSE 0 END) AS RATING_5
		FROM
    		PRODUCT_REVIEW
		WHERE
    		PRO_CODE = #{pro_code}
		
	</select>
	
	<!-- 제품상세페이지 제품의 옵션 쿼리문 -->
	<select id="productOption"
		resultType="com.tech.petfriends.product.dto.ProductDetailOptionDto">
		SELECT
			*
		FROM
			PRODUCT_OPTION
		WHERE
			PRO_CODE = #{pro_code}	
		ORDER BY
			PROOPT_CODE ASC
	</select>
	
	<!-- 제품상세페이지 해당유저의 제품 찜상태 -->
	<select id="productWishList"
		resultType="com.tech.petfriends.product.dto.ProductDetailWishListDto">
		SELECT
			COUNT(*) wishListResult
		FROM
			MEMBER_WISHLIST
		WHERE
			PRO_CODE = #{pro_code}
		AND
			MEM_CODE = #{mem_code}
	</select>
	
	<!-- 제품상세페이지 제품 찜목록에 추가 -->
	<insert id="productWishListInsert">
		INSERT INTO 
			MEMBER_WISHLIST(MEM_CODE, PRO_CODE) 
		VALUES(#{mem_code}, #{pro_code} )
	</insert>
	
	<!-- 제품상세페이지 제품 찜목록에서 삭제 -->
	<delete id="productWishListDelete">
		DELETE 
		FROM
			MEMBER_WISHLIST
		WHERE
			PRO_CODE = #{pro_code}
		AND
			MEM_CODE = #{mem_code}
		
	</delete>
	
	<!-- 제품상세페이지 제품구매시 해당유저의 등급별 예상 적립금 % -->
	<select id="productPoint"
		resultType="com.tech.petfriends.product.dto.ProductDetailPointDto">
		SELECT 
            GRADE.G_RATE
        FROM
            GRADE
        INNER JOIN 
            MEMBER ON GRADE.G_NO = MEMBER.G_NO
        WHERE
            MEMBER.G_NO= (SELECT G_NO FROM MEMBER WHERE MEM_CODE=#{mem_code})
	</select>
	
	<!-- 제품상세페이지 장바구니담기 인서트 -->
	<insert id="productDetailCart">
		INSERT INTO 
			PRODUCT_CART(CART_CODE, MEM_CODE, PRO_CODE, PROOPT_CODE, CART_CNT, ADDR_CODE)
		VALUES (
    		#{cart_code}, #{mem_code}, #{pro_code}, #{opt_code}, #{cart_cnt},
    		(SELECT 
    			ADDR_CODE
    		FROM 
    			ADDRESS
    		WHERE 
    			MEM_CODE = #{mem_code}
    		AND 
    			ADDR_DEFAULT = 'Y'))
	</insert>
	
	<!-- 제품상세페이지 추천제품 리스트 -->
	<select id="productRecommendProduct" 
		resultType="com.tech.petfriends.product.dto.ProductListViewDto">
		SELECT 
			*
		FROM 
			(
	    	SELECT 
	        	PRO.PRO_CODE,
	        	PRO.PRO_NAME,
	        	PROIMG.MAIN_IMG1,
	        	MIN(PROOPT.PROOPT_FINALPRICE) AS PROOPT_FINALPRICE,
	        	MIN(PROOPT.PROOPT_PRICE) AS PROOPT_PRICE,
	        	PRO.PRO_DISCOUNT,
	        	PRO.PRO_ONOFF,
	        	NVL(COUNT(PROREV.PRO_CODE), 0) AS TOTAL_REVIEWS, 
	        	COALESCE(ROUND(AVG(PROREV.REVIEW_RATING), 1), 0.0) AS AVERAGE_RATING  
	    	FROM 
		        PRODUCT PRO
		    INNER JOIN 
	        	PRODUCT_IMAGE PROIMG ON PRO.PRO_CODE = PROIMG.PRO_CODE
	    	INNER JOIN 
		        PRODUCT_OPTION PROOPT ON PRO.PRO_CODE = PROOPT.PRO_CODE
		    LEFT JOIN 
	        	PRODUCT_REVIEW PROREV ON PRO.PRO_CODE = PROREV.PRO_CODE
	    	WHERE 
		        PRO.PRO_PETS = (SELECT PRO_PETS FROM PRODUCT WHERE PRO_CODE = #{pro_code})
	        AND 
	        	PRO.PRO_TYPE = (SELECT PRO_TYPE FROM PRODUCT WHERE PRO_CODE = #{pro_code})	
		    AND 
		    	PRO.PRO_ONOFF IN ('판매')
	        AND 
	        	PRO.PRO_CODE != #{pro_code}
	    	GROUP BY 
	        	PRO.PRO_CODE, PRO.PRO_NAME, PROIMG.MAIN_IMG1, PRO.PRO_DISCOUNT, PRO.PRO_ONOFF
	    	ORDER BY 
	        	AVERAGE_RATING DESC
			) 
		WHERE 
			ROWNUM &lt;= 4
	
	</select>
	
</mapper>