<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.petfriends.login.mapper.MemberMapper">

    <!-- 이메일과 비밀번호로 회원을 조회 -->
    <select id="getMemberByEmail" parameterType="String" resultType="com.tech.petfriends.login.dto.MemberLoginDto">
	    SELECT * 
	    FROM MEMBER 
	    WHERE MEM_EMAIL = #{email} 
	</select>
	
	<select id="isPhoneNumberDuplicate" resultType="int" parameterType="String">
		SELECT COUNT(*) 
		FROM member 
		WHERE mem_tell = #{phoneNumber}
	</select>
	
	<!-- 회원 정보를 DB에 저장 -->
    <insert id="insertMember" parameterType="com.tech.petfriends.login.dto.MemberLoginDto">
        INSERT INTO MEMBER (mem_code, mem_email, mem_pw, mem_nick, mem_tell, mem_name, mem_birth, mem_gender, mem_invite, mem_regdate, mem_logdate)
        VALUES (#{mem_code}, #{mem_email}, #{mem_pw}, #{mem_nick}, #{mem_tell}, #{mem_name}, #{mem_birth}, #{mem_gender}, #{mem_invite}, #{mem_regdate}, #{mem_logdate})
    </insert>
    
    <!-- 회원 주소 정보를 DB에 저장 -->
    <insert id="insertJoinAddress" parameterType="com.tech.petfriends.login.dto.MemberAddressDto">
        INSERT INTO ADDRESS (addr_code, mem_code, addr_postal, addr_line1, addr_line2, addr_default)
        VALUES (#{addr_code}, #{mem_code}, #{addr_postal}, #{addr_line1}, #{addr_line2}, #{addr_default})
    </insert>

	<!-- 회원가입시 닉네임 중복 조회 -->
	<select id="isNicknameDuplicate" resultType="int" parameterType="String">
    	SELECT COUNT(*) FROM MEMBER WHERE mem_nick = #{nickname}
	</select>
	
	<!-- 회원가입시 이메일 중복 조회 -->
	<select id="isEmailDuplicate" resultType="int" parameterType="String">
    	SELECT COUNT(*) FROM MEMBER WHERE mem_email = #{email}
	</select>
	
	<!-- 정보변경시 연락처 중복 조회 -->
	<select id="isTellDuplicate" resultType="int" parameterType="String">
    	SELECT COUNT(*) FROM MEMBER WHERE mem_tell = #{tell}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="findUserId" parameterType="String" resultType="com.tech.petfriends.login.dto.MemberLoginDto">
	    SELECT mem_code, mem_email, mem_name
	    FROM MEMBER
	    WHERE mem_name = #{name} AND mem_tell = #{phoneNumber}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="String">
	    UPDATE member
	    SET mem_pw = #{encryptedPassword}
	    WHERE mem_email = #{email}
	</update>
	
	<!-- 로그인 회원 등급 정보 검색 -->
    <select id="getGradeByMemberCode" resultType="com.tech.petfriends.mypage.dto.GradeDto">
		SELECT G.G_NO,G_NAME,G_CONDITION,G_RATE
		FROM GRADE G
		JOIN MEMBER M ON G.G_NO = M.G_NO
		WHERE M.MEM_CODE=#{param1}
	</select>

	<!-- 로그인시 해당 유저가 기존에 둘러본 상품목록 삭제 -->
	<delete id="deleteWindowPro">
		DELETE FROM
			PRODUCT_WINDOW
		WHERE
			MEM_CODE = #{mem_code}
	</delete>
</mapper>
